name: CI-CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  CI_version:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js 19.x # 19.7.0
        uses: actions/setup-node@v3
        with:
          node-version: 19.x # 19.7.0
          cache: 'npm'

      - name: Install npm
        run: npm install --force

      - name: Build project
        run: CI=false npm run build --if-present
        # CI=false (treating warnings as errors because process.env.ci = true.)  

      - name: Run tests
        run: npm run test      

  # CD_version:
  #   needs: CI_version
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up Node.js 19.x # 19.7.0
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 19.x # 19.7.0
  #         cache: 'npm'  

  #     - name: Install npm
  #       run: npm install --force

  #     - name: Build project
  #       run: CI=false npm run build --if-present
  #       # CI=false (treating warnings as errors because process.env.ci = true.)      

  #     - name: Update server (liara)
  #       env:
  #         LIARA_TOKEN: ${{ secrets.LIARA_API_TOKEN }}
  #       run: |
  #         npm install -g @liara/cli@5 --force
  #         liara deploy --app="nowaste" --api-token="$LIARA_TOKEN" --no-app-logs --platform=node --port=8000

  #     - name: Build and Push Docker Image
  #       uses: mr-smithers-excellent/docker-build-push@v4
  #       with:
  #         image: helia2080/no-waste 
  #         registry: docker.io
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  # CD_version:
  #   runs-on: ubuntu-latest
  #   needs: CI_version
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 19.x # 19.7.0
  #         cache: 'npm' 

      - name: Remove unneccessary config files
        run: find . -type f \( -name "docker-compose.yml" -o -name ".dockerignore" -o -name "Dockerfile" \) -exec rm -f {} +
      - name: Update server and deliver last version
        env:
          LIARA_TOKEN: ${{ secrets.LIARA_API_TOKEN }}
        run: |
          npm i -g @liara/cli@5
          liara deploy --app="gforce" --api-token="$LIARA_TOKEN" --no-app-logs

